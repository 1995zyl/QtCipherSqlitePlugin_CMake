From 37e0a70a87d7b4ece5d088cf4cd7379d34e7b47e Mon Sep 17 00:00:00 2001
From: 1995zyl <820215387@qq.com>
Date: Tue, 18 Jun 2024 22:28:02 +0800
Subject: [PATCH] 11

---
 demo/main.cpp                    | 45 ++++++++++++++++++--------------
 sqlitecipher/sqlcachedresult_p.h |  3 ++-
 sqlitecipher/sqlitecipher.cpp    |  2 ++
 3 files changed, 29 insertions(+), 21 deletions(-)

diff --git a/demo/main.cpp b/demo/main.cpp
index 7f45d3d..f51ed06 100644
--- a/demo/main.cpp
+++ b/demo/main.cpp
@@ -2,9 +2,9 @@
 #include <QCoreApplication>
 #include <QTemporaryDir>
 
-#ifndef QT_DEBUG
-#error Must be built in debug mode!
-#endif
+// #ifndef QT_DEBUG
+// #error Must be built in debug mode!
+// #endif
 
 #ifdef Q_OS_IOS
 #  include <QtPlugin>
@@ -101,8 +101,10 @@ int main(int argc, char *argv[])
     QSqlDatabase dbconn = QSqlDatabase::addDatabase("SQLITECIPHER");
     dbconn.setDatabaseName(DB_FILE_PATH); //localDB.db is already existing before running the application
     dbconn.setPassword("pass");
-    dbconn.setConnectOptions("QSQLITE_USE_CIPHER=sqlcipher; SQLCIPHER_LEGACY=1; SQLCIPHER_LEGACY_PAGE_SIZE=4096; QSQLITE_CREATE_KEY");
-
+    if (!QFileInfo(DB_FILE_PATH).exists())
+        dbconn.setConnectOptions("QSQLITE_USE_CIPHER=sqlcipher; SQLCIPHER_LEGACY=1; SQLCIPHER_LEGACY_PAGE_SIZE=4096; QSQLITE_CREATE_KEY");
+    else
+        dbconn.setConnectOptions("QSQLITE_USE_CIPHER=sqlcipher; SQLCIPHER_LEGACY=1; SQLCIPHER_LEGACY_PAGE_SIZE=4096");
     bool open = dbconn.open();
     qDebug() << "open: " << open;
     qDebug() << "isOpen(): " << dbconn.isOpen() << dbconn.isOpenError();
@@ -115,21 +117,24 @@ int main(int argc, char *argv[])
     }
 
     QSqlQuery query;
-//    query.exec("create table test (id int, name varchar)");
-//    query.exec("insert into test values (1, 'AAA')");
-//    query.exec("insert into test values (2, 'BBB')");
-//    query.exec("insert into test values (3, 'CCC')");
-//    query.exec("insert into test values (4, 'DDD')");
-//    query.exec("insert into test values (5, 'EEE')");
-//    query.exec("insert into test values (6, 'FFF')");
-//    query.exec("insert into test values (7, 'GGG')");
-//    query.exec("select * from test where name regexp '(a|A)$'");
-//    if (query.next()) {
-//        qDebug() << "Regexp result: " << query.value(0).toInt() << ": " << query.value(1).toString();
-//    } else {
-//        qDebug() << "This plugin does not support regexp.";
-//    }
-//    qDebug() << "----------" << endl;
+    if (!QFileInfo(DB_FILE_PATH).exists())
+    {
+        query.exec("create table test (id int, name varchar)");
+        query.exec("insert into test values (1, 'AAA')");
+        query.exec("insert into test values (2, 'BBB')");
+        query.exec("insert into test values (3, 'CCC')");
+        query.exec("insert into test values (4, 'DDD')");
+        query.exec("insert into test values (5, 'EEE')");
+        query.exec("insert into test values (6, 'FFF')");
+        query.exec("insert into test values (7, 'GGG')");
+        query.exec("select * from test where name regexp '(a|A)$'");
+        if (query.next()) {
+            qDebug() << "Regexp result: " << query.value(0).toInt() << ": " << query.value(1).toString();
+        } else {
+            qDebug() << "This plugin does not support regexp.";
+        }
+        qDebug() << "----------";
+    }
     query.exec("select id, name from test");
     while (query.next()) {
         qDebug() << query.value(0).toInt() << ": " << query.value(1).toString();
diff --git a/sqlitecipher/sqlcachedresult_p.h b/sqlitecipher/sqlcachedresult_p.h
index 2453e6d..2148ec9 100644
--- a/sqlitecipher/sqlcachedresult_p.h
+++ b/sqlitecipher/sqlcachedresult_p.h
@@ -51,8 +51,9 @@ QT_BEGIN_HEADER
 QT_BEGIN_NAMESPACE
 
 class QVariant;
+#if (QT_VERSION < 0x060502)
 template <typename T> class QVector;
-
+#endif
 class SqlCachedResultPrivate;
 
 class SqlCachedResult : public QSqlResult
diff --git a/sqlitecipher/sqlitecipher.cpp b/sqlitecipher/sqlitecipher.cpp
index e3e38d4..539b972 100644
--- a/sqlitecipher/sqlitecipher.cpp
+++ b/sqlitecipher/sqlitecipher.cpp
@@ -93,8 +93,10 @@ extern "C" {
 # include "sqlite3mc_amalgamation.h"
 }
 
+#if (QT_VERSION < 0x060502)
 Q_DECLARE_METATYPE(sqlite3*)
 Q_DECLARE_METATYPE(sqlite3_stmt*)
+#endif
 #if (QT_VERSION >= 0x050000)
 Q_DECLARE_OPAQUE_POINTER(sqlite3*)
 Q_DECLARE_OPAQUE_POINTER(sqlite3_stmt*)
-- 
2.40.0.windows.1

