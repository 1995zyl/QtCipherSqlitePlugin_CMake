set(TARGET sqlitecipher)

file(GLOB target_include_file 
       "${CMAKE_CURRENT_SOURCE_DIR}/*.h" 
       "${CMAKE_CURRENT_SOURCE_DIR}/sqlite3/sqlite3mc_amalgamation.h"
)
file(GLOB target_source_file 
       "${CMAKE_CURRENT_SOURCE_DIR}/*.cpp" 
       "${CMAKE_CURRENT_SOURCE_DIR}/sqlite3/sqlite3mc_amalgamation.c"
)
add_library(${TARGET} SHARED ${target_include_file} ${target_source_file})

if(WIN32)
       if("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
              set_target_properties(${TARGET} PROPERTIES OUTPUT_NAME "sqlitecipherd")
       else ()
              set_target_properties(${TARGET} PROPERTIES OUTPUT_NAME "sqlitecipher")
       endif ()
elseif (UNIX)
       if("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
              set_target_properties(${TARGET} PROPERTIES OUTPUT_NAME "qlitecipher_debug")
       else ()
              set_target_properties(${TARGET} PROPERTIES OUTPUT_NAME "sqlitecipher")
       endif ()
endif ()

add_definitions(-DQT_PLUGIN)

add_definitions(-D_CRT_SECURE_NO_WARNINGS)  
add_definitions(-D_CRT_SECURE_NO_DEPRECATE)  
add_definitions(-D_CRT_NONSTDC_NO_DEPRECATE)  
add_definitions(-DTHREADSAFE=1)  
add_definitions(-DSQLITE_MAX_ATTACHED=10)  
add_definitions(-DSQLITE_SOUNDEX)  
add_definitions(-DSQLITE_ENABLE_EXPLAIN_COMMENTS)  
add_definitions(-DSQLITE_ENABLE_COLUMN_METADATA)  
add_definitions(-DSQLITE_HAS_CODEC=1)  
add_definitions(-DCODEC_TYPE=CODEC_TYPE_CHACHA20)  
add_definitions(-DSQLITE_SECURE_DELETE)  
add_definitions(-DSQLITE_ENABLE_FTS3)  
add_definitions(-DSQLITE_ENABLE_FTS3_PARENTHESIS)  
add_definitions(-DSQLITE_ENABLE_FTS4)  
add_definitions(-DSQLITE_ENABLE_FTS5)  
add_definitions(-DSQLITE_ENABLE_JSON1)  
add_definitions(-DSQLITE_ENABLE_RTREE)  
add_definitions(-DSQLITE_CORE)  
add_definitions(-DSQLITE_ENABLE_EXTFUNC)  
add_definitions(-DSQLITE_ENABLE_CSV)  
add_definitions(-DSQLITE_ENABLE_SHA3)  
add_definitions(-DSQLITE_ENABLE_CARRAY)  
add_definitions(-DSQLITE_ENABLE_FILEIO)  
add_definitions(-DSQLITE_ENABLE_SERIES)  
add_definitions(-DSQLITE_TEMP_STORE=2)  
add_definitions(-DSQLITE_USE_URI)  
add_definitions(-DSQLITE_USER_AUTHENTICATION)
add_definitions(-DQT_NO_CAST_TO_ASCII)
add_definitions(-DQT_NO_CAST_FROM_ASCII)

target_include_directories(${TARGET} PRIVATE 
       ${CMAKE_CURRENT_SOURCE_DIR}/sqlite3
       ${QT_SDK_DIR}/include/QtSql/${QT_VERSION}
       ${QT_SDK_DIR}/include/QtCore/${QT_VERSION}
       ${QT_SDK_DIR}/include/QtCore/${QT_VERSION}/QtCore
)

target_link_libraries(${TARGET}
       PUBLIC
       Qt${QT_VERSION_MAJOR}::Core
       Qt${QT_VERSION_MAJOR}::Sql
)

if (WIN32)
    INSTALL(TARGETS ${TARGET} RUNTIME DESTINATION ${QT_SDK_DIR}/plugins/sqldrivers)

    if("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
       set(SQLITECIPHER_PDB ${PROJECT_SOURCE_DIR}/bin/${CMAKE_BUILD_TYPE}/sqlitecipherd.pdb)
       INSTALL(FILES ${SQLITECIPHER_PDB} DESTINATION ${QT_SDK_DIR}/plugins/sqldrivers)
    endif ()
elseif (UNIX)
    INSTALL(TARGETS ${TARGET}  DESTINATION ${QT_SDK_DIR}/plugins/sqldrivers)
endif ()

